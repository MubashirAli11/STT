cmake_minimum_required(VERSION 2.8)
project(STTProject)

set(CMAKE_CXX_FLAGS "-Wall -std=c++14")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
include_directories(/usr/include/caffe)
link_directories(/usr/local/lib)
#include(CMakeLists-ExternalProjects.txt)
find_package(Boost REQUIRED serialization)
if(Boost_FOUND)

include_directories(${Boost_INCLUDE_DIRS})
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${Boost_LIBRARIES})

endif(Boost_FOUND)

set (STTProject_LIBRARIES ${STTProject_LIBRARIES} stt)
#set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${portaudio_LIBRARIES})
#set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${nana_LIBRARIES})
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} CppUTest)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} CppUTestExt)
#set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${cpputest_LIBRARIES})
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} portaudio)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} portaudiocpp)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} sndfile)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} nana)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} openblas)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} lapack)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} arpack)

find_package(Caffe)
include_directories(${Caffe_INCLUDE_DIRS})
add_definitions(${Caffe_DEFINITIONS})
#add_definitions(-DMonis)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${Caffe_LIBRARIES})

find_package(Armadillo)
include_directories(${Armadillo_INCLUDE_DIRS})
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} ${ARMADILLO_LIBRARIES})

if (UNIX)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} X11)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} pthread)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} rt)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} Xft)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} stdc++fs)
endif(UNIX)
if (WIN32)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} gdi32)
set (STTProject_LIBRARIES ${STTProject_LIBRARIES} comdlg32)
endif(WIN32)

add_subdirectory(src)
add_subdirectory(test)
